generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Boleto {
    asiento         Int
    pasajeroDni     String
    codigo          String   @unique
    fechaRegistro   DateTime @default(now())
    equipaje        String?
    id              String   @id @default(uuid())
    precio          Int
    reservado       Boolean  @default(false)
    telefonoCliente String
    viaje           Viaje    @relation(fields: [viajeId], references: [id])
    viajeId         String   @unique
}

model Bus {
    Viaje         Viaje[]
    asientos      Int
    fechaRegistro DateTime @default(now())
    foto          String?
    id            String   @id @default(cuid())
    modelo        String   @default("Scania Touring")
    placa         String   @unique
}

model Conductor {
    claseLicencia  String
    conductorDni   String
    disponibilidad Boolean @default(true)
    foto           String?
    id             String  @id @default(uuid())
    numeroLicencia String
    telefono       String
    viaje          Viaje?  @relation(fields: [viajeId], references: [id])
    viajeId        String?
}

model Encomienda {
    codigo          String   @unique
    descripcion     String
    destinatarioDni String
    factura         Boolean  @default(false)
    fechaEnvio      DateTime @default(now())
    id              String   @id @default(uuid())
    pagado          Boolean  @default(false)
    precio          Int
    remitenteDni    String
    viaje           Viaje    @relation(fields: [viajeId], references: [id])
    viajeId         String
}

model Ruta {
    Viaje            Viaje[]
    ciudadDestino    String
    ciudadOrigen     String
    duracionEstimada Int
    id               String  @id @default(uuid())
    terminalDestino  String
    terminalOrigen   String
}

model Session {
    expires      DateTime
    id           String   @id @default(cuid())
    sessionToken String   @unique
    user         Usuario  @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId       String
}

enum Role {
    ADMIN
    USER
    GUEST
}

model Usuario {
    username       String    @unique
    usuarioDni     String    @unique
    id             String    @id @default(cuid())
    foto           String?
    sedeDelegacion String
    password       String
    nombres        String
    apellidos      String
    sessions       Session[]
    rol            Role      @default(USER)
}

model Viaje {
    activo      Boolean
    boletos     Boleto[]
    bus         Bus          @relation(fields: [busId], references: [id])
    busId       String
    conductores Conductor[]
    encomiendas Encomienda[]
    estado      String
    salida      DateTime
    id          String       @id @default(uuid())
    ruta        Ruta         @relation(fields: [rutaId], references: [id])
    rutaId      String
    tarifas     Int[]
}
