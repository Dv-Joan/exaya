generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum BoletoEstado {
    DISPONIBLE
    RESERVADO
    PAGADO
}

enum SerieFactura {
    F001
    F002
    F003
    F004
}

enum SerieBoleto {
    B001
    B002
    B003
    B004
}

enum SerieEncomienda {
    B001
    F001
}

model Sede {
    id               String       @id @default(cuid())
    agenciaUbicacion String
    agencia          String
    serieBoleto      SerieBoleto
    serieFactura     SerieFactura
    contadorBoletos  Int
    contadorFacturas Int
    usuarios         Usuario[]
}

model Boleto {
    asiento           Int
    metodoPago        String
    pasajeroDni       String
    estado            BoletoEstado @default(DISPONIBLE)
    pasajeroNombres   String
    pasajeroApellidos String
    usuario           Usuario      @relation(fields: [usuarioId], references: [id])
    usuarioId         String
    codigo            String       @unique
    destino           String       @default("Sin Destino")
    fechaRegistro     DateTime     @default(now())
    id                String       @id @default(uuid())
    precio            Int
    viaje             Viaje        @relation(fields: [viajeId], references: [id])
    viajeId           String
}

model Bus {
    id            String   @id @default(cuid())
    viaje         Viaje[]
    asientos      Int
    fechaRegistro DateTime @default(now())
    foto          String   @default("https://res.cloudinary.com/diqe1byxy/image/upload/v1713285529/exaya/bus-placeholder_o1yclo.avif")
    modelo        String   @default("Scania Touring")
    placa         String   @unique
}

model Conductor {
    claseLicencia  String
    conductorDni   String
    nombres        String
    apellidos      String
    disponibilidad Boolean @default(true)
    foto           String  @default("https://res.cloudinary.com/diqe1byxy/image/upload/v1713286238/exaya/driver-placeholder_lizdxg.avif")
    id             String  @id @default(uuid())
    numeroLicencia String
    telefono       String
    viaje          Viaje?  @relation(fields: [viajeId], references: [id])
    viajeId        String?
}

model Encomienda {
    destino               String
    numero                Int             @default(autoincrement())
    serie                 SerieEncomienda
    descripcion           String
    usuario               Usuario         @relation(fields: [usuarioId], references: [id])
    usuarioId             String
    codigoRastreo         String          @default("Sin Codigo")
    destinatarioDni       String
    destinatarioNombres   String
    destinatarioApellidos String
    remitenteNombres      String
    remitenteDni          String
    remitenteApellidos    String
    factura               Boolean         @default(false)
    razonSocial           String?
    ruc                   String?
    fechaEnvio            DateTime
    fechaRecepcion        DateTime        @default(now())
    id                    String          @id @default(uuid())
    pagado                Boolean         @default(false)
    precio                Int
    viaje                 Viaje           @relation(fields: [viajeId], references: [id])
    viajeId               String
}

model Ruta {
    viaje            Viaje[]
    ciudadDestino    String
    ciudadOrigen     String
    duracionEstimada Int
    id               String  @id @default(uuid())
    terminalDestino  String
    terminalOrigen   String
}

enum Rol {
    ADMIN
    USER
    GUEST
}

enum ViajeEstado {
    DISPONIBLE
    CANCELADO
    LLENO
}

model Usuario {
    username   String       @unique
    sede       Sede         @relation(fields: [sedeId], references: [id])
    sedeId     String
    usuarioDni String       @unique
    id         String       @id @default(cuid())
    foto       String       @default("https://res.cloudinary.com/diqe1byxy/image/upload/v1713285660/exaya/user-placeholder_d7njq8.png")
    telefono   String
    password   String
    nombres    String
    apellidos  String
    rol        Rol          @default(USER)
    encomienda Encomienda[]
    boleto     Boleto[]
    viaje      Viaje[]
    isDeleted  Boolean      @default(false)
}

model Viaje {
    boletos       Boleto[]
    bus           Bus          @relation(fields: [busId], references: [id])
    busId         String
    conductores   Conductor[]
    usuario       Usuario      @relation(fields: [usuarioId], references: [id])
    usuarioId     String
    encomiendas   Encomienda[]
    estado        ViajeEstado  @default(DISPONIBLE)
    salida        DateTime
    id            String       @id @default(uuid())
    ruta          Ruta         @relation(fields: [rutaId], references: [id])
    rutaId        String
    tarifas       Int[]
    tarifaGeneral Int
}
