generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum BoletoEstado {
    DISPONIBLE
    RESERVADO
    PAGADO
}

model Boleto {
    asiento           Int
    pasajeroDni       String
    estado            BoletoEstado @default(DISPONIBLE)
    pasajeroNombres   String
    pasajeroApellidos String
    codigo            String       @unique
    fechaRegistro     DateTime     @default(now())
    equipaje          String       @default("Sin Equipaje")
    id                String       @id @default(uuid())
    precio            Int
    telefonoCliente   String
    viaje             Viaje        @relation(fields: [viajeId], references: [id])
    viajeId           String       @unique
}

model Bus {
    id            String   @id @default(cuid())
    //TODO: To lowercase Viaje
    Viaje         Viaje[]
    asientos      Int
    fechaRegistro DateTime @default(now())
    foto          String   @default("https://res.cloudinary.com/diqe1byxy/image/upload/v1713285529/exaya/bus-placeholder_o1yclo.avif")
    modelo        String   @default("Scania Touring")
    placa         String   @unique
}

model Conductor {
    claseLicencia  String
    conductorDni   String
    nombres        String
    apellidos      String
    disponibilidad Boolean @default(true)
    foto           String  @default("https://res.cloudinary.com/diqe1byxy/image/upload/v1713286238/exaya/driver-placeholder_lizdxg.avif")
    id             String  @id @default(uuid())
    numeroLicencia String
    telefono       String
    viaje          Viaje?  @relation(fields: [viajeId], references: [id])
    viajeId        String?
}

model Encomienda {
    codigo                String   @unique
    descripcion           String
    destinatarioDni       String
    destinatarioNombres   String
    destinatarioApellidos String
    destinatarioTelefono  String
    remitenteTelefono     String
    // TODO: Delete this columns because it comes from the viajeId
    ciudadDestino         String
    ciudadOrigen          String
    remitenteNombres      String
    remitenteApellidos    String
    factura               Boolean  @default(false)
    empresa               String?
    ruc                   String?
    fechaEnvio            DateTime @default(now())
    id                    String   @id @default(uuid())
    pagado                Boolean  @default(false)
    precio                Int
    remitenteDni          String
    viaje                 Viaje    @relation(fields: [viajeId], references: [id])
    viajeId               String
}

model Ruta {
    Viaje            Viaje[]
    ciudadDestino    String
    ciudadOrigen     String
    duracionEstimada Int
    id               String  @id @default(uuid())
    terminalDestino  String
    terminalOrigen   String
}

enum Rol {
    ADMIN
    USER
    GUEST
}

enum ViajeEstado {
    DISPONIBLE
    CANCELADO
    LLENO
}

model Usuario {
    username       String @unique
    usuarioDni     String @unique
    id             String @id @default(cuid())
    foto           String @default("https://res.cloudinary.com/diqe1byxy/image/upload/v1713285660/exaya/user-placeholder_d7njq8.png")
    sedeDelegacion String
    telefono       String
    password       String
    nombres        String
    apellidos      String
    rol            Rol    @default(USER)
}

model Viaje {
    boletos     Boleto[]
    bus         Bus          @relation(fields: [busId], references: [id])
    busId       String
    conductores Conductor[]
    encomiendas Encomienda[]
    estado      ViajeEstado  @default(DISPONIBLE)
    salida      DateTime
    id          String       @id @default(uuid())
    ruta        Ruta         @relation(fields: [rutaId], references: [id])
    rutaId      String
    tarifas     Int[]
}
